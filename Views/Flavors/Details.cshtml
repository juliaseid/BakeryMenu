@{
  Layout = "_Layout";
}

@model SweetCakes.Models.Flavor;

<h2>Menu Items</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.FlavorName): @Html.DisplayFor(model => model.FlavorName)</h3>

@if(@Model.Treats.Count == 0)
{
  <p>No menu items currently come in this flavor.</p>
}
else
{
  <ul>
  @foreach(var join in Model.Treats)
  {
    <li>@join.Treat.Name</li>
  }
  </ul>
}
@if (User.Identity.IsAuthenticated)
{
  <p>@Html.ActionLink("Add A New Menu Item in this Flavor", "AddTreat", new { id = Model.FlavorId })</p>
  <p>@Html.ActionLink("Edit this Flavor", "Edit", new { id = Model.FlavorId })</p>
  <p>@Html.ActionLink("Delete Flavor", "Delete", new { id = Model.FlavorId })</p>
  <br>
  <input type="submit" class="btn btn-default" value="Log out" />
}
else 
{
  <h4>@Html.ActionLink("Log in", "Login", "Account") to update menu with new Flavors and Menu Items.</h4>
}

<p>@Html.ActionLink("Back to Flavors", "Index")</p>
